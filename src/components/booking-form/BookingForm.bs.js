// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Str$ReactTemplate = require("../../utils/Str.bs.js");

function translate(string) {
  return string;
}

var component = ReasonReact.reducerComponent("BookingForm");

function make() {
  var navigateToCarList = function () {
    return ReasonReact.Router[/* push */0]("/en/hoopties");
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var send = param[/* send */3];
      var state = param[/* state */1];
      return React.createElement("form", {
                  className: "form"
                }, React.createElement("fieldset", {
                      className: "fieldset"
                    }, React.createElement("legend", {
                          className: "legend"
                        }, Str$ReactTemplate.txt("booking.legend")), React.createElement("input", {
                          label: "pickup.label",
                          name: "pickup",
                          placeholder: "pickup.placeholder",
                          type: "text",
                          value: state[/* pickup */0],
                          onChange: (function ($$event) {
                              return Curry._1(send, /* UpdatePickup */Block.__(0, [$$event.target.value]));
                            })
                        }), React.createElement("input", {
                          label: "dropoff.label",
                          name: "dropoff",
                          placeholder: "dropoff.placeholder",
                          type: "text",
                          value: state[/* dropoff */1],
                          onChange: (function ($$event) {
                              return Curry._1(send, /* UpdateDropoff */Block.__(1, [$$event.target.value]));
                            })
                        })), React.createElement("fieldset", {
                      className: "fieldset"
                    }, React.createElement("label", {
                          className: "label",
                          htmlFor: "pickup-date"
                        }, Str$ReactTemplate.txt("booking.pickupDate")), React.createElement("input", {
                          className: "input",
                          id: "pickup-date",
                          type: "date",
                          value: state[/* pickupDate */3],
                          onChange: (function ($$event) {
                              return Curry._1(send, /* UpdatePickupDate */Block.__(3, [$$event.target.value]));
                            })
                        }), React.createElement("label", {
                          className: "label",
                          htmlFor: "pickup-time"
                        }, Str$ReactTemplate.txt("booking.pickupTime")), React.createElement("input", {
                          className: "input",
                          type: "time",
                          value: state[/* time */2],
                          onChange: (function ($$event) {
                              return Curry._1(send, /* UpdateTime */Block.__(2, [$$event.target.value]));
                            })
                        })), React.createElement("div", {
                      className: "buttonContainer"
                    }, React.createElement("button", {
                          className: "button",
                          onClick: navigateToCarList
                        }, Str$ReactTemplate.txt("booking.bookNow"))));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* pickup */"",
              /* dropoff */"",
              /* time */"",
              /* pickupDate */""
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      switch (action.tag | 0) {
        case 0 : 
            return /* Update */Block.__(0, [/* record */[
                        /* pickup */action[0],
                        /* dropoff */state[/* dropoff */1],
                        /* time */state[/* time */2],
                        /* pickupDate */state[/* pickupDate */3]
                      ]]);
        case 1 : 
            return /* Update */Block.__(0, [/* record */[
                        /* pickup */state[/* pickup */0],
                        /* dropoff */action[0],
                        /* time */state[/* time */2],
                        /* pickupDate */state[/* pickupDate */3]
                      ]]);
        case 2 : 
            return /* Update */Block.__(0, [/* record */[
                        /* pickup */state[/* pickup */0],
                        /* dropoff */state[/* dropoff */1],
                        /* time */action[0],
                        /* pickupDate */state[/* pickupDate */3]
                      ]]);
        case 3 : 
            return /* Update */Block.__(0, [/* record */[
                        /* pickup */state[/* pickup */0],
                        /* dropoff */state[/* dropoff */1],
                        /* time */state[/* time */2],
                        /* pickupDate */action[0]
                      ]]);
        
      }
    });
  return newrecord;
}

var str = Str$ReactTemplate.txt;

exports.str = str;
exports.translate = translate;
exports.component = component;
exports.make = make;
/* component Not a pure module */
